"""
    降順挿入ソート

    ＜ループ不変式＞
      for文の各繰り返しが開始されるときには、
      A[0..j-1]には、もともとA[0..j-1]に
      格納されていた要素がソートされた状態で
      格納されている。

    初期条件（基底）：
      j = 1 のループが開始する直前では、A[0..j-1]は
      元々A[0]に存在する要素である。
      また、A[0]はソートされた状態である。

    ループ内条件（帰納）：
      for文が行なっているのはA[j]を入れるべき場所が
      見つかるまでA[j-1],A[j-2],A[j-3],...をそれぞれ
      1つ右に移し、空いた場所にA[j]を挿入することである。
      挿入後の部分配列A[0..j-1]はもともとA[0..j-1]に
      格納されていた要素であり、ソートされている。
      次の繰り返しが開始される際にはこの状態が維持されている。

    終了条件（停止）：
      for文が停止した際には j = len(A) となっている。
      これをループ不変式に代入すると A[0..len(A)-1]となる。
      A[0..len(A)-1]は配列全体を意味するので、全体がソート済み
      であると結論できる。
"""


def insertion_sort_desc(A):
    for j in range(1, len(A)):
        key = A[j]
        i = j - 1
        while i >= 0 and A[i] < key: # > を < に変更
            A[i + 1] = A[i]
            i -= 1
        A[i + 1] = key